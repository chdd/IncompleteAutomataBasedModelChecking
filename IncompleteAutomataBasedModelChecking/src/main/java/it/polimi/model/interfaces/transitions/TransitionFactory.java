package it.polimi.model.interfaces.transitions;

import it.polimi.model.impl.labeling.DNFFormulaImpl;
import it.polimi.model.impl.transitions.Transition;
import it.polimi.model.interfaces.labeling.DNFFormula;

import org.apache.commons.collections15.Factory;

import rwth.i2.ltl2ba4j.model.impl.GraphProposition;

/**
 * contains the {@link Factory} that a used to create {@link Transition}s
 * 
 * @author claudiomenghi
 * @param CONSTRAINEDELEMENT
 *            is the element that may be constrained by a {@link Transition}
 * @param TRANSITION
 *            is the {@link Transition} to be generated by the {@link Factory}
 */
public interface TransitionFactory<TRANSITION extends Transition> extends
		Factory<TRANSITION> {

	/**
	 * creates a new transition TRANSITION with a {@link DNFFormula} which contains
	 * the {@link GraphProposition} SIGMA
	 * 
	 * @return a new transition TRANSITION labeled with a {@link DNFFormula} which
	 *         contains only the {@link GraphProposition} SIGMA
	 */
	public TRANSITION create();

	/**
	 * creates a new {@link Transition} with the specified {@link DNFFormula}
	 * 
	 * @param condition
	 *            is the {@link DNFFormula} to be added as a label of the
	 *            {@link Transition}
	 * @return a new {@link Transition} with the {@link DNFFormula} as label
	 * @throws NullPointerException
	 *             if the {@link DNFFormula} is null
	 */
	public TRANSITION create(DNFFormula condition);

	/**
	 * creates a new {@link Transition} with the specified {@link DNFFormula}, and
	 * the specified id
	 * 
	 * @param dnfFormula
	 *            is the {@link DNFFormula} to be added as a label of the
	 *            {@link Transition}
	 * @param id
	 *            is the if of the {@link Transition}
	 * @return a new {@link Transition} with the {@link DNFFormula} as label, and
	 *         the specified id
	 * @throws NullPointerException
	 *             if the {@link DNFFormulaImpl} is null
	 * @throws IllegalArgumentException
	 *             if the id is not grater than or equal to zero
	 */
	public TRANSITION create(int id, DNFFormula dnfFormula);
}